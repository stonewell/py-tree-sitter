name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build_asan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build Python+ASAN
        shell: /usr/bin/bash {0}
        run: |
          git clone --depth=1 -b 3.10 https://github.com/python/cpython.git
          cd cpython
          ./configure --with-assertions --with-address-sanitizer --with-undefined-behavior-sanitizer --with-pydebug --disable-shared "--prefix=$(pwd)/opt"
          make -j2
          make install
          ./python -m ensurepip
      - name: Fetch fixtures
        run: ./script/fetch-fixtures
      - name: Test
        run: |
          CFLAGS="-O0 -g" ./cpython/python setup.py test
          ./cpython/python -c 'import tree_sitter'
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.6"
          - "3.8"
          - "3.10"
          - pypy-3.7
        install_libcxx:
          - false
          - true
        exclude:
          - os: windows-latest
            install_libcxx: true
          - os: macos-latest
            install_libcxx: true
          - os: macos-latest
            python: pypy-3.7
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Uninstall libcxx
        if: ${{ matrix.os == 'ubuntu-latest' && !matrix.install_libcxx }}
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get purge -y 'libc++*'
      - name: Install libcxx
        if: ${{ matrix.install_libcxx }}
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y libc++-dev libc++abi-dev
      - name: Install flake8
        run: python -m pip install flake8
      - name: Fetch fixtures
        run: ./script/fetch-fixtures
      - name: Lint
        run: ./script/lint
      - name: Test
        shell: bash
        run: |
          CFLAGS="-O0 -g" python setup.py test
